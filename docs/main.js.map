{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configuration.service.ts","webpack:///./src/app/cost-table/cost-table.component.css","webpack:///./src/app/cost-table/cost-table.component.html","webpack:///./src/app/cost-table/cost-table.component.ts","webpack:///./src/app/costs.service.ts","webpack:///./src/app/global-building.service.ts","webpack:///./src/app/level-selector/level-selector.component.css","webpack:///./src/app/level-selector/level-selector.component.html","webpack:///./src/app/level-selector/level-selector.component.ts","webpack:///./src/app/shared/no-duplicate.validator.ts","webpack:///./src/app/shared/validation.ts","webpack:///./src/app/slot.service.ts","webpack:///./src/app/sniper.service.ts","webpack:///./src/app/sniping/sniping.component.css","webpack:///./src/app/sniping/sniping.component.html","webpack:///./src/app/sniping/sniping.component.ts","webpack:///./src/app/summary.service.ts","webpack:///./src/app/summary/summary.component.css","webpack:///./src/app/summary/summary.component.html","webpack:///./src/app/summary/summary.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>\\r\\n        {{ title }}\\r\\n      </h1>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-level-selector></app-level-selector>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-sniping></app-sniping>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\">&nbsp;</div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-cost-table></app-cost-table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-summary></app-summary>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CostsService } from './costs.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'FOE LG Kalkulator';\r\n  costs;\r\n\r\n  constructor(\r\n    private _costsService: CostsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this._costsService.costs.subscribe(costs => this.costs = costs);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { LOCALE_ID } from '@angular/core';\nimport localeDe from '@angular/common/locales/de';\nimport localeDeExtra from '@angular/common/locales/extra/de';\nimport { registerLocaleData } from '@angular/common';\nregisterLocaleData(localeDe, localeDeExtra);\n\nimport { AppComponent } from './app.component';\nimport { LevelSelectorComponent } from './level-selector/level-selector.component';\nimport { CostTableComponent } from './cost-table/cost-table.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { SnipingComponent } from './sniping/sniping.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LevelSelectorComponent,\n    CostTableComponent,\n    SummaryComponent,\n    SnipingComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'de' },\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ConfigurationService {\r\n  private _cookieName: string = 'foe-gb-calc';\r\n\r\n  constructor() { }\r\n\r\n  public getCookieName() {\r\n    return this._cookieName;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvc3QtdGFibGUvY29zdC10YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"table\\\">\\r\\n  <table class=\\\"table table-sm table-hover\\\">\\r\\n    <thead class=\\\"thead-dark\\\">\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Rang</th>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Belohnung</th>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Kosten</th>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Absicherung</th>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Sniping</th>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Summe</th>\\r\\n        <th scope=\\\"col\\\" class=\\\"text-right\\\">Rest</th>\\r\\n        <th scope=\\\"col\\\">offen</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let cost of costs.rankData\\\" [ngClass]=\\\"cost.highRisk ? 'bg-danger text-white' : '' \\\">\\r\\n        <th scope=\\\"row\\\" class=\\\"text-right\\\">{{ cost.rank | number }}</th>\\r\\n        <td class=\\\"text-right\\\">{{ cost.reward > 0 ? (cost.reward | number) : \\\"-\\\"}}</td>\\r\\n        <td class=\\\"text-right\\\">{{ cost.cost > 0 ? (cost.cost | number) : \\\"-\\\" }}</td>\\r\\n        <td class=\\\"text-right\\\" [ngSwitch]=\\\"cost.hedge > 0\\\">\\r\\n          <span *ngSwitchCase=\\\"true\\\">{{ cost.hedgeTotal | number }} (+{{ cost.hedge | number }})</span>\\r\\n          <span *ngSwitchDefault>-</span>\\r\\n        </td>\\r\\n        <td class=\\\"text-right\\\">{{ cost.snipingCost > 0 ? (cost.snipingCost | number) : \\\"-\\\" }}</td>\\r\\n        <td class=\\\"text-right\\\">{{ cost.alreadyPaid | number }}</td>\\r\\n        <td class=\\\"text-right\\\">{{ cost.rest | number }}</td>\\r\\n        <td>\\r\\n          <div class=\\\"custom-control custom-switch\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"openSlots[cost.rank - 1]\\\" id=\\\"slot-{{ cost.rank - 1 }}\\\" (change)=\\\"changeSlot()\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"slot-{{ cost.rank - 1 }}\\\"></label>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n      <tr>\\r\\n        <td colspan=\\\"8\\\" class=\\\"text-center\\\"><strong>Gesamtkosten: {{ costs.buildingCost | number }}</strong> / <strong>eigene Kosten: {{ costs.ownCost | number }}</strong></td>\\r\\n      </tr>\\r\\n    </tfoot>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { CostsService } from '../costs.service';\nimport { SlotService } from '../slot.service';\n\n@Component({\n  selector: 'app-cost-table',\n  templateUrl: './cost-table.component.html',\n  styleUrls: ['./cost-table.component.css']\n})\nexport class CostTableComponent implements OnInit {\n  public costs;\n  public openSlots;\n\n  constructor(private costsService: CostsService, private slotService: SlotService) {\n    this.openSlots = this.slotService.getSlots();\n  }\n\n  ngOnInit() {\n    this.costsService.costs.subscribe(costs => {\n      this.costs = costs;\n    });\n  }\n\n  public changeSlot() {\n    this.slotService.setSlots(this.openSlots);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { GlobalBuildingService } from './global-building.service';\r\nimport { SniperService } from './sniper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CostsService {\r\n  private _multiplicator: number = 1.9;\r\n  private _building = 'arc';\r\n  private _level: number = 30;\r\n  private costsSource = new BehaviorSubject({});\r\n\r\n  public costs = this.costsSource.asObservable();\r\n\r\n\r\n  constructor(private globalBuildingService: GlobalBuildingService, private sniperService: SniperService) { }\r\n\r\n  public calculateCosts() {\r\n    let rankData = []\r\n    let buildingCost: number;\r\n    let ownCost: number;\r\n\r\n    this._getBuildingData().subscribe(buildingData => {\r\n      let alreadyPaid: number = 0;\r\n      let snipingCost: number = 0;\r\n      let rankHedgingTotal: number = 0;\r\n      let highRisk: boolean = false;\r\n      let baseReward = buildingData.reward;\r\n      buildingCost = ownCost = buildingData.cost;\r\n\r\n      for (let rank = 1; rank <= 5; rank++) {\r\n        let rankReward = this._calculateReward4Rank(baseReward, rank);\r\n        let rankCost = this._getCost4Rank(rankReward);\r\n        let rankHedging = this._getHedging4Rank(buildingCost, alreadyPaid, rankCost);\r\n\r\n        rankHedgingTotal = alreadyPaid + rankHedging;\r\n        highRisk = buildingCost - alreadyPaid - rankCost * 2 < -1;\r\n        snipingCost = highRisk ? Math.round((buildingCost - alreadyPaid) / 2) : 0;\r\n        alreadyPaid += rankCost + rankHedging;\r\n        ownCost -= rankCost;\r\n\r\n        rankData.push({\r\n          rank: rank,\r\n          reward: rankReward,\r\n          cost: rankCost,\r\n          hedge: rankHedging,\r\n          hedgeTotal: rankHedgingTotal,\r\n          alreadyPaid: alreadyPaid,\r\n          rest: buildingCost - alreadyPaid,\r\n          highRisk: highRisk,\r\n          snipingCost: snipingCost,\r\n        });\r\n      }\r\n\r\n      let result = {\r\n        'buildingCost': buildingCost,\r\n        'ownCost': ownCost,\r\n        'rankData': rankData\r\n      };\r\n\r\n      this.costsSource.next(result);\r\n    });\r\n  }\r\n\r\n  public getLevel(): number {\r\n    return this._level;\r\n  }\r\n\r\n  public setLevel(level): void {\r\n    this._level = level;\r\n    this.calculateCosts();\r\n  }\r\n\r\n  public setBuilding(building): void {\r\n    this._building = building;\r\n    this.calculateCosts();\r\n  }\r\n\r\n  public setFactor(factor: number) {\r\n    this._multiplicator = factor;\r\n    this.calculateCosts();\r\n  }\r\n\r\n  public getBuilding(): string {\r\n    return this._building;\r\n  }\r\n\r\n  private _getBuildingData(): Observable<any> {\r\n    const rewardObservable = new Observable(observer => {\r\n      this.globalBuildingService.getBuildingData(this._building, this._level).subscribe(buildingData => {\r\n        observer.next(buildingData);\r\n        observer.complete();\r\n      });\r\n    });\r\n\r\n    return rewardObservable;\r\n  }\r\n\r\n  private _getCost4Rank(reward): number {\r\n    return Math.round(reward * this._multiplicator);\r\n  }\r\n\r\n  private _calculateReward4Rank(reward, rank): number {\r\n    for (let i = 1; i <= rank; i++) {\r\n      reward = Math.round(reward / i / 5) * 5\r\n    }\r\n\r\n    return reward\r\n  }\r\n\r\n  private _getHedging4Rank(buildingCost, alreadyPaid, rankCost): number {\r\n    let toHedge: number = 0;\r\n\r\n    if (rankCost > 0) {\r\n      toHedge = buildingCost - alreadyPaid - rankCost * 2\r\n    }\r\n\r\n    return toHedge > 0 ? toHedge : 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalBuildingService {\r\n  private _mapping: Object;\r\n  private _mappingLoaded = false;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this._getBuildingData().subscribe();\r\n  }\r\n\r\n  public getBuildingData(building, level): Observable<any> {\r\n    const ageObservable = new Observable(observer => {\r\n      this._getBuildingData().subscribe(mappingData => {\r\n        let age = mappingData[building].age;\r\n\r\n        this._getAgeData(age).subscribe(data => {\r\n          observer.next(data[level - 1]);\r\n          observer.complete();\r\n        });\r\n      });\r\n    });\r\n\r\n    return ageObservable;\r\n  }\r\n\r\n  public getGlobalBuildings(): Observable<any> {\r\n    const observable = new Observable(observer => {\r\n      this._getBuildingData().subscribe(buildingDataObj => {\r\n        let buildings = this._convertIntoArray(buildingDataObj);\r\n        observer.next(buildings);\r\n        observer.complete();\r\n      });\r\n    });\r\n\r\n    return observable;\r\n  }\r\n\r\n  private _getAgeData(age): Observable<any> {\r\n    return this.http.get(\"./assets/data/ages/\" + age + \".json\");\r\n  }\r\n\r\n  private _getBuildingData(): Observable<any> {\r\n    const mappingObservable = new Observable(observer => {\r\n      if (!this._mappingLoaded) {\r\n        this.http.get(\"./assets/data/buildings.json\").subscribe(data => {\r\n          this._mapping = data;\r\n          this._mappingLoaded = true;\r\n          observer.next(this._mapping);\r\n          observer.complete();\r\n        });\r\n      } else {\r\n        observer.next(this._mapping);\r\n        observer.complete();\r\n      }\r\n\r\n    });\r\n\r\n    return mappingObservable;\r\n  }\r\n\r\n  private _convertIntoArray(dataObj) {\r\n    let result = [];\r\n\r\n    for (let key in dataObj) {\r\n      result.push({\r\n        name: dataObj[key].name,\r\n        key: key\r\n      });\r\n    }\r\n\r\n    return this._sortBuildingsAsc(result);\r\n  }\r\n\r\n  private _sortBuildingsAsc(buildings) {\r\n    return buildings.sort((obj1, obj2) => {\r\n      if (obj1.name > obj2.name) {\r\n        return 1;\r\n      }\r\n\r\n      if (obj1.name < obj2.name) {\r\n        return -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xldmVsLXNlbGVjdG9yL2xldmVsLXNlbGVjdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"form-row\\\">\\r\\n  <div class=\\\"form-group col-md-2\\\">\\r\\n    <label>Faktor</label>\\r\\n    <select class=\\\"custom-select custom-select-sm \\\" [(ngModel)]=\\\"factor\\\" id=\\\"factorselect\\\" (change)=\\\"factorChanged()\\\">\\r\\n      <option *ngFor=\\\"let factor of factors\\\" [value]=\\\"factor\\\">{{ factor }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-2\\\">\\r\\n    <label for=\\\"gbselect\\\">LG auswählen:</label>\\r\\n    <select class=\\\"custom-select custom-select-sm \\\" [(ngModel)]=\\\"gb\\\" id=\\\"gbselect\\\" (change)=\\\"globalBuildingChanged()\\\">\\r\\n      <option *ngFor=\\\"let globalBuilding of globalBuildings\\\" [value]=\\\"globalBuilding.key\\\">{{ globalBuilding.name }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-2\\\">\\r\\n    <label>Level</label>\\r\\n    <input [(ngModel)]=\\\"level\\\" placeholder=\\\"1\\\" type=\\\"number\\\" (change)=\\\"levelChanged()\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CostsService } from '../costs.service';\r\nimport { GlobalBuildingService } from '../global-building.service';\r\nimport { SummaryService } from '../summary.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ConfigurationService } from '../configuration.service';\r\n\r\n@Component({\r\n  selector: 'app-level-selector',\r\n  templateUrl: './level-selector.component.html',\r\n  styleUrls: ['./level-selector.component.css']\r\n})\r\nexport class LevelSelectorComponent implements OnInit {\r\n\r\n  public level = 30;\r\n  public globalBuildings;\r\n  public gb = 'arc';\r\n  public factors = [1.85, 1.9];\r\n  public factor = 1.9;\r\n\r\n  constructor(\r\n    private costsService: CostsService,\r\n    private globalBuildingService: GlobalBuildingService,\r\n    private summaryService: SummaryService,\r\n    private cookieService: CookieService,\r\n    private config: ConfigurationService\r\n  ) {\r\n    this.initCookie();\r\n    this.costsService.setBuilding(this.gb);\r\n    this.costsService.setLevel(this.level);\r\n    this.costsService.setFactor(this.factor);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.costsService.calculateCosts();\r\n    this.globalBuildingService.getGlobalBuildings().subscribe(globalBuildings => {\r\n      this.globalBuildings = globalBuildings;\r\n      this.summaryService.setBuilding(this._getGlobalBuildingByKey(this.gb).name);\r\n    });\r\n  }\r\n\r\n  public levelChanged() {\r\n    this.costsService.setLevel(this.level);\r\n    this.storeCookie();\r\n  }\r\n\r\n  public factorChanged() {\r\n    this.costsService.setFactor(this.factor);\r\n    this.storeCookie();\r\n  }\r\n\r\n  public globalBuildingChanged() {\r\n    this.costsService.setBuilding(this.gb);\r\n    this.summaryService.setBuilding(this._getGlobalBuildingByKey(this.gb).name);\r\n    this.storeCookie();\r\n  }\r\n\r\n  private _getGlobalBuildingByKey(key) {\r\n    for (let obj of this.globalBuildings) {\r\n      if (obj.key === key) {\r\n        return obj;\r\n      }\r\n    }\r\n  }\r\n\r\n  private initCookie() {\r\n    if (this.cookieService.check(this.config.getCookieName())) {\r\n      let cookie = JSON.parse(this.cookieService.get(this.config.getCookieName()));\r\n      this.gb = cookie.gb;\r\n      this.level = cookie.level;\r\n      this.factor = cookie.factor;\r\n    }\r\n  }\r\n\r\n  private storeCookie() {\r\n    let cookie = {\r\n      gb: this.gb,\r\n      level: this.level,\r\n      factor: this.factor\r\n    };\r\n\r\n    this.cookieService.set(this.config.getCookieName(), JSON.stringify(cookie));\r\n  }\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function NoDuplicate(compareWith: Array<any>): ValidatorFn  {\r\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n    if (compareWith.indexOf(control.value) != -1) {\r\n      return {duplicate: true};\r\n    }\r\n    return null;\r\n  };\r\n}\r\n","export class CustomValidator {\r\n  // Validates URL\r\n  static urlValidator(url): any {\r\n    if (url.pristine) {\r\n      return null;\r\n    }\r\n    const URL_REGEXP = /^(http?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\r\n    url.markAsTouched();\r\n    if (URL_REGEXP.test(url.value)) {\r\n      return null;\r\n    }\r\n    return {\r\n      invalidUrl: true\r\n    };\r\n  }\r\n  // Validates passwords\r\n  static matchPassword(group): any {\r\n    const password = group.controls.password;\r\n    const confirm = group.controls.confirm;\r\n    if (password.pristine || confirm.pristine) {\r\n      return null;\r\n    }\r\n    group.markAsTouched();\r\n    if (password.value === confirm.value) {\r\n      return null;\r\n    }\r\n    return {\r\n      invalidPassword: true\r\n    };\r\n  }\r\n  // Validates numbers\r\n  static numberValidator(number): any {\r\n    if (number.pristine) {\r\n      return null;\r\n    }\r\n    const NUMBER_REGEXP = /^-?[\\d.]+(?:e-?\\d+)?$/;\r\n    number.markAsTouched();\r\n    if (NUMBER_REGEXP.test(number.value)) {\r\n      return null;\r\n    }\r\n    return {\r\n      invalidNumber: true\r\n    };\r\n  }\r\n  // Validates US SSN\r\n  static ssnValidator(ssn): any {\r\n    if (ssn.pristine) {\r\n      return null;\r\n    }\r\n    const SSN_REGEXP = /^(?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$/;\r\n    ssn.markAsTouched();\r\n    if (SSN_REGEXP.test(ssn.value)) {\r\n      return null;\r\n    }\r\n    return {\r\n      invalidSsn: true\r\n    };\r\n  }\r\n  // Validates US phone numbers\r\n  static phoneValidator(number): any {\r\n    if (number.pristine) {\r\n      return null;\r\n    }\r\n    const PHONE_REGEXP = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/;\r\n    number.markAsTouched();\r\n    if (PHONE_REGEXP.test(number.value)) {\r\n      return null;\r\n    }\r\n    return {\r\n      invalidNumber: true\r\n    };\r\n  }\r\n  // Validates zip codes\r\n  static zipCodeValidator(zip): any {\r\n    if (zip.pristine) {\r\n      return null;\r\n    }\r\n    const ZIP_REGEXP = /^[0-9]{5}(?:-[0-9]{4})?$/;\r\n    zip.markAsTouched();\r\n    if (ZIP_REGEXP.test(zip.value)) {\r\n      return null;\r\n    }\r\n    return {\r\n      invalidZip: true\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SlotService {\r\n  private _openSlots = [false, false, false, false, false];\r\n  private _slotBehavior = new BehaviorSubject({});\r\n  public slotBehaviorObservable = this._slotBehavior.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  public getSlots(): Array<boolean> {\r\n    return this._openSlots;\r\n  }\r\n\r\n  public setSlots(slots): void {\r\n    this._openSlots = slots;\r\n    this._slotBehavior.next(slots);\r\n  }\r\n\r\n  public getOpenSlots(): Array<number> {\r\n    return this._openSlots.reduce(function (acc, curr, index) {\r\n      if (curr == true) {\r\n        acc.push(index + 1);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SniperService {\r\n  private _snipers: Array<Number> = [];\r\n\r\n  constructor() { }\r\n\r\n  public addSniper(sniper) {\r\n    this._snipers.push(sniper);\r\n  }\r\n\r\n  public removeSniper(sniper) {\r\n    let index = this._snipers.indexOf(sniper);\r\n    if (index !== -1) {\r\n      this._snipers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public getSnipers():Array<Number> {\r\n    return this._snipers;\r\n  }\r\n}\r\n","module.exports = \".ng-valid[required], .ng-valid.required {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form) {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc25pcGluZy9zbmlwaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBOEIsRUFBRSxVQUFVO0FBQzVDOztBQUVBO0VBQ0UsOEJBQThCLEVBQUUsUUFBUTtBQUMxQyIsImZpbGUiOiJzcmMvYXBwL3NuaXBpbmcvc25pcGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXZhbGlkW3JlcXVpcmVkXSwgLm5nLXZhbGlkLnJlcXVpcmVkIHtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXHJcbn1cclxuXHJcbi5uZy1pbnZhbGlkOm5vdChmb3JtKSB7XHJcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYTk0NDQyOyAvKiByZWQgKi9cclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"custom-control custom-switch\\\">\\r\\n  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"sniperActive\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\r\\n  <label class=\\\"custom-control-label\\\" for=\\\"sniperActive\\\">Sniper vorhanden?</label>\\r\\n</div>\\r\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n  <div class=\\\"card card-body\\\">\\r\\n    <form class=\\\"form-inline\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"sniperForm\\\">\\r\\n      <div class=\\\"form-group mx-sm-3 mb-2\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"sniperInput\\\" placeholder=\\\"Einlage in FP\\\"><br />\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2\\\" [disabled]=\\\"!sniperForm.valid\\\">Hinzufügen</button>\\r\\n    </form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <span *ngFor=\\\"let sniper of snipers\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeSniper(sniper)\\\">{{ sniper | number }} x</button>&nbsp;\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { SniperService } from '../sniper.service';\nimport { CustomValidator } from '../shared/validation';\nimport { NoDuplicate } from '../shared/no-duplicate.validator';\n\n@Component({\n  selector: 'app-sniping',\n  templateUrl: './sniping.component.html',\n  styleUrls: ['./sniping.component.css'],\n})\n\nexport class SnipingComponent implements OnInit {\n  public sniperInput: Number;\n  public snipers: Array<Number> = [];\n\n  public sniperForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private sniperService: SniperService) { }\n\n  ngOnInit() {\n    this.sniperForm = this.formBuilder.group({\n      sniperInput: ['', [Validators.required, CustomValidator.numberValidator, NoDuplicate(this.sniperService.getSnipers())]]\n    });\n  }\n\n  public onSubmit() {\n    if (this.sniperForm.invalid) {\n      return;\n    }\n\n    this.sniperService.addSniper(this.sniperForm.value.sniperInput);\n    this.snipers = this.sniperService.getSnipers();\n    this.sniperForm.reset();\n  }\n\n  public removeSniper(sniper) {\n    this.sniperService.removeSniper(sniper);\n    this.snipers = this.sniperService.getSnipers();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { SlotService } from './slot.service';\nimport { CostsService } from './costs.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SummaryService {\n  private _costs;\n  private _prefix: string = \"\";\n  private _suffix: string = \"\";\n  private _building: string = \"\";\n\n  constructor(private slotService: SlotService, private costsService: CostsService) {\n    this.costsService.costs.subscribe(costs => {\n      this._costs = costs;\n      this.createSummary();\n    });\n\n    this.slotService.slotBehaviorObservable.subscribe(slots => {\n      this.createSummary();\n    });\n  }\n\n  private createSummary() {\n    let openSlots = this.slotService.getOpenSlots();\n    let openSlotsStr = [];\n    let summary: string = \"\";\n\n    for (let slot of openSlots) {\n      openSlotsStr.push(\"P\" + slot + \" (\" + this._costs.rankData[slot - 1].cost + \")\");\n    }\n\n    if (openSlotsStr.length > 0) {\n\n      if (this._prefix != \"\") {\n        summary += this._getInterpolated(this._prefix) + \" \";\n      }\n\n      summary += openSlotsStr.join(\", \");\n\n      if (this._suffix != \"\") {\n        summary += \" \" + this._getInterpolated(this._suffix);\n      }\n    }\n\n    return summary;\n  }\n\n  public getSummary() {\n    return this.createSummary();\n  }\n\n  public setSuffix(suffix) {\n    this._suffix = suffix;\n  }\n\n  public setPrefix(prefix) {\n    this._prefix = prefix;\n  }\n\n  public setBuilding(building) {\n    this._building = building;\r\n  }\n\n  private _getInterpolated(str: string): string {\n    return str.replace('{LG}', this._building);\r\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1bW1hcnkvc3VtbWFyeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-toggle=\\\"collapse\\\" href=\\\"#settings\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"settings\\\">Einstellungen</button>&nbsp;\\r\\n  </div>\\r\\n  <div class=\\\"col text-right\\\" *ngIf=\\\"summary\\\">\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"summary\\\" id=\\\"summarycopymanual\\\" />&nbsp;\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"copy2Clipboard()\\\">{{ summary }}</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\">&nbsp;</div>\\r\\n<div class=\\\"card collapse\\\" id=\\\"settings\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Einstellungen\\r\\n  </div>\\r\\n  <div class=\\\"card card-body\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <span class=\\\"input-group-text\\\">Prefix / Suffix</span>\\r\\n      </div>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"prefix\\\" placeholder=\\\"verwende {LG} für das ausgewählte LG\\\" (change)=\\\"changePrefix()\\\" />\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"suffix\\\" placeholder=\\\"verwende {LG} für das ausgewählte LG\\\" (change)=\\\"changeSuffix()\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { CostsService } from '../costs.service';\nimport { SlotService } from '../slot.service';\nimport { SummaryService } from '../summary.service';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.css']\n})\nexport class SummaryComponent implements OnInit {\n  public prefix: string = \"\";\n  public suffix: string = \"\";\n  public summary: string = \"\";\n\n  private _costs;\n\n  constructor(\n    private costsService: CostsService,\n    private slotService: SlotService,\n    private summaryService: SummaryService) { }\n\n  ngOnInit() {\n    this.costsService.costs.subscribe(costs => {\n      this._costs = costs;\n      this.changeSummary();\n    });\n\n    this.slotService.slotBehaviorObservable.subscribe(slots => {\n      this.changeSummary();\n    });\n  }\n\n  public changeSummary() {\n    this.summary = this.summaryService.getSummary();\n  }\n\n  public changePrefix() {\n    this.summaryService.setPrefix(this.prefix);\n    this.changeSummary();\n  }\n\n  public changeSuffix() {\n    this.summaryService.setSuffix(this.suffix);\n    this.changeSummary();\n  }\n\n  public copy2Clipboard() {\n    let input = document.getElementById('summarycopymanual') as HTMLInputElement;\n    input.focus();\n    input.select();\n    input.setSelectionRange(0, 9999);\n    document.execCommand('copy');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}